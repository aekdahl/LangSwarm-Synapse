"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[196],{273:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"llm-consensus","title":"Collaborative Decision-Making","description":"Overview","source":"@site/docs/llm-consensus.md","sourceDirName":".","slug":"/llm-consensus","permalink":"/LangSwarm/llm-consensus","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Collaborative Decision-Making","sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"Diverse Output Generation","permalink":"/LangSwarm/llm-branching"},"next":{"title":"Dynamic Routing","permalink":"/LangSwarm/llm-routing"}}');var i=n(4848),t=n(8453);const l={title:"Collaborative Decision-Making",sidebar_position:3},o="Collaborative Decision-Making",a={},c=[{value:"<strong>Overview</strong>",id:"overview",level:2},{value:"<strong>Key Features</strong>",id:"key-features",level:2},{value:"<strong>API Reference</strong>",id:"api-reference",level:2},{value:"<strong>Class: <code>LLMConsensus</code></strong>",id:"class-llmconsensus",level:3},{value:"<strong>Initialization</strong>",id:"initialization",level:4},{value:"<strong>Methods</strong>",id:"methods",level:3},{value:"<strong><code>run()</code></strong>",id:"run",level:4},{value:"<strong>Examples</strong>",id:"examples",level:2},{value:"<strong>Basic Example</strong>",id:"basic-example",level:3},{value:"<strong>Advanced Example: Custom Thresholds</strong>",id:"advanced-example-custom-thresholds",level:3},{value:"<strong>How It Works</strong>",id:"how-it-works",level:2},{value:"<strong>Best Practices</strong>",id:"best-practices",level:2},{value:"<strong>Use Cases</strong>",id:"use-cases",level:2},{value:"<strong>Key Advantages</strong>",id:"key-advantages",level:2},{value:"<strong>Future Enhancements</strong>",id:"future-enhancements",level:2}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"collaborative-decision-making",children:"Collaborative Decision-Making"})}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:(0,i.jsx)(s.strong,{children:"Overview"})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"LLMConsensus"})," class in LangSwarm enables multiple agents to collaboratively generate and evaluate responses, selecting the most consistent or highest-quality output through consensus. It is ideal for use cases where multiple perspectives are required, and the best answer needs to be determined from a pool of responses."]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"key-features",children:(0,i.jsx)(s.strong,{children:"Key Features"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Collaborative Decision-Making"}),":",(0,i.jsx)(s.br,{}),"\n","Aggregates outputs from multiple agents and determines the best response using similarity-based consensus mechanisms."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Diverse Agent Support"}),":",(0,i.jsx)(s.br,{}),"\n","Compatible with LangChain, Hugging Face, OpenAI, and custom agents via the ",(0,i.jsx)(s.code,{children:"AgentWrapper"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Dynamic Similarity Calculation"}),":",(0,i.jsx)(s.br,{}),"\n","Uses cosine similarity and paraphrase detection to evaluate and compare responses."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Configurable Consensus Mechanisms"}),":",(0,i.jsx)(s.br,{}),"\n","Supports customization of thresholds and other parameters to tailor consensus behavior."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"api-reference",children:(0,i.jsx)(s.strong,{children:"API Reference"})}),"\n",(0,i.jsx)(s.h3,{id:"class-llmconsensus",children:(0,i.jsxs)(s.strong,{children:["Class: ",(0,i.jsx)(s.code,{children:"LLMConsensus"})]})}),"\n",(0,i.jsx)(s.p,{children:"Performs consensus-building among multiple agents."}),"\n",(0,i.jsx)(s.h4,{id:"initialization",children:(0,i.jsx)(s.strong,{children:"Initialization"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"LLMConsensus(query, clients, threshold=0.75, verbose=False)\n"})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameter"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"query"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"str"})}),(0,i.jsx)(s.td,{children:"The input query to be processed by the agents."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"clients"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"list"})}),(0,i.jsx)(s.td,{children:"A list of agents participating in the consensus process."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"threshold"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"float"})}),(0,i.jsxs)(s.td,{children:["The similarity threshold for determining consensus. Default is ",(0,i.jsx)(s.code,{children:"0.75"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"verbose"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"bool"})}),(0,i.jsxs)(s.td,{children:["If ",(0,i.jsx)(s.code,{children:"True"}),", enables detailed logging. Default is ",(0,i.jsx)(s.code,{children:"False"}),"."]})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"methods",children:(0,i.jsx)(s.strong,{children:"Methods"})}),"\n",(0,i.jsx)(s.h4,{id:"run",children:(0,i.jsx)(s.strong,{children:(0,i.jsx)(s.code,{children:"run()"})})}),"\n",(0,i.jsx)(s.p,{children:"Executes the consensus workflow, querying all agents, comparing their outputs, and selecting the best response."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Returns"}),":"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"tuple"}),": The selected response, its similarity score, and the group size supporting it."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"examples",children:(0,i.jsx)(s.strong,{children:"Examples"})}),"\n",(0,i.jsx)(s.h3,{id:"basic-example",children:(0,i.jsx)(s.strong,{children:"Basic Example"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'from langswarm.swarm import LLMConsensus\nfrom langswarm.wrappers import AgentWrapper\nfrom langchain.llms import OpenAI\n\n# Step 1: Create and wrap agents\nagent1 = AgentWrapper(agent=OpenAI(model="gpt-4"), is_conversational=True)\nagent2 = AgentWrapper(agent=OpenAI(model="gpt-3.5-turbo"), is_conversational=True)\n\n# Step 2: Initialize LLMConsensus with the agents\nquery = "What are the key benefits of using solar energy?"\nconsensus_swarm = LLMConsensus(query=query, clients=[agent1, agent2])\n\n# Step 3: Run the consensus workflow\nresponse, similarity, group_size = consensus_swarm.run()\n\n# Display the results\nprint("Consensus Response:", response)\nprint("Similarity Score:", similarity)\nprint("Group Size Supporting Consensus:", group_size)\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"advanced-example-custom-thresholds",children:(0,i.jsx)(s.strong,{children:"Advanced Example: Custom Thresholds"})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:'from langswarm.swarm import LLMConsensus\nfrom langswarm.wrappers import AgentWrapper\nfrom transformers import pipeline\n\n# Step 1: Create and wrap agents\nhuggingface_agent = AgentWrapper(agent=pipeline("text-generation", model="gpt2"), is_conversational=False)\n\nopenai_agent = AgentWrapper(agent="openai_gpt3", is_conversational=True)  # Assuming an OpenAI agent wrapper\n\n# Step 2: Initialize LLMConsensus with a custom threshold\nquery = "What are the challenges of remote work?"\nconsensus_swarm = LLMConsensus(query=query, clients=[huggingface_agent, openai_agent], threshold=0.8, verbose=True)\n\n# Step 3: Run the consensus workflow\nresponse, similarity, group_size = consensus_swarm.run()\n\n# Display the results\nprint("Consensus Response:", response)\nprint("Similarity Score:", similarity)\nprint("Group Size Supporting Consensus:", group_size)\n'})}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"how-it-works",children:(0,i.jsx)(s.strong,{children:"How It Works"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Querying Agents"}),":",(0,i.jsx)(s.br,{}),"\n","All agents in the ",(0,i.jsx)(s.code,{children:"clients"})," list are queried with the provided input."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Calculating Similarities"}),":",(0,i.jsx)(s.br,{}),"\n","The outputs are compared using cosine similarity and paraphrase detection."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Selecting the Best Response"}),":",(0,i.jsx)(s.br,{}),"\n","The response with the highest similarity score that meets the threshold is selected as the consensus."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Returning Results"}),":",(0,i.jsx)(s.br,{}),"\n","The consensus response, its similarity score, and the group size are returned."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"best-practices",children:(0,i.jsx)(s.strong,{children:"Best Practices"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Use Multiple Agents"}),":",(0,i.jsx)(s.br,{}),"\n","The effectiveness of consensus improves with diverse agents providing different perspectives."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Adjust Thresholds"}),":",(0,i.jsx)(s.br,{}),"\n","Tailor the similarity threshold to balance strictness and flexibility for consensus selection."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Enable Verbose Mode"}),":",(0,i.jsx)(s.br,{}),"\n","Use ",(0,i.jsx)(s.code,{children:"verbose=True"})," during testing or debugging to understand the consensus process in detail."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"use-cases",children:(0,i.jsx)(s.strong,{children:"Use Cases"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Research and Summarization"}),":",(0,i.jsx)(s.br,{}),"\n","Combine multiple agents to generate high-quality summaries of research papers or articles."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Content Moderation"}),":",(0,i.jsx)(s.br,{}),"\n","Validate and approve content collaboratively using multiple AI models."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Decision Support Systems"}),":",(0,i.jsx)(s.br,{}),"\n","Aggregate diverse perspectives for decision-making tasks."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"key-advantages",children:(0,i.jsx)(s.strong,{children:"Key Advantages"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Collaborative Intelligence"}),":",(0,i.jsx)(s.br,{}),"\n","Harness the strengths of multiple agents to generate superior responses."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Flexibility"}),":",(0,i.jsx)(s.br,{}),"\n","Works with diverse agents and platforms, making it adaptable to various use cases."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Robust Decision-Making"}),":",(0,i.jsx)(s.br,{}),"\n","Ensures the selected response meets quality and consistency criteria."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"future-enhancements",children:(0,i.jsx)(s.strong,{children:"Future Enhancements"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Dynamic Threshold Adjustment"}),":",(0,i.jsx)(s.br,{}),"\n","Automatically adjust thresholds based on the nature of the query and agent responses."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Expanded Metrics"}),":",(0,i.jsx)(s.br,{}),"\n","Incorporate additional metrics, such as sentiment analysis or diversity scoring, for consensus selection."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Cross-Agent Memory"}),":",(0,i.jsx)(s.br,{}),"\n","Enable shared memory to improve context understanding across multiple agents."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"LLMConsensus"})," class is a powerful tool for scenarios requiring collaborative decision-making. By leveraging multiple agents and advanced similarity techniques, LangSwarm ensures the best responses are consistently selected."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>o});var r=n(6540);const i={},t=r.createContext(i);function l(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);